name: hydrated_state_notifier

on:
  push:
    paths:
      - "packages/**"
      - ".github/workflows/hydrated_state_notifier.yaml"
  pull_request:
    paths:
      - "packages/**"
      - ".github/workflows/hydrated_state_notifier.yaml"
  schedule:
    # runs the CI every first day of every month at 00:00 AM
    - cron: "0 0 1 * *"

jobs:
  dart:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - packages/hydrated_state_notifier
          - packages/hydrated_state_notifier_hive
        channel:
          - stable
          - beta

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.channel }}

      # It is executed separatly
      - name: Removing example folder
        run: rm -rf example
        working-directory: ${{ matrix.package }}

      - name: Install dependencies
        run: flutter pub get
        working-directory: ${{ matrix.package }}

      - name: Check format
        run: flutter format --set-exit-if-changed .
        working-directory: ${{ matrix.package }}

      - name: Analyze
        run: flutter analyze .
        working-directory: ${{ matrix.package }}

      - name: Run tests
        run: flutter test -j 1 --no-pub --coverage --test-randomize-ordering-seed random
        working-directory: ${{ matrix.package }}

      - name: Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          min_coverage: 60
          path: ${{ matrix.package }}/coverage/lcov.info

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  pana:
    runs-on: ubuntu-latest
    container: dart:${{ matrix.channel }}

    strategy:
      matrix:
        package:
          - packages/hydrated_state_notifier
          - packages/hydrated_state_notifier_hive
        channel:
          - latest
          - beta

    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          dart pub get
          dart pub global activate pana
        working-directory: ${{ matrix.package }}
      - name: Verify Pub Score
        run: |
          PANA=$(pana . --no-warning)
          PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if [ -z "$1" ]; then MINIMUM_SCORE=TOTAL; else MINIMUM_SCORE=$1; fi
          if (( $SCORE < $MINIMUM_SCORE )); then echo "minimum score $MINIMUM_SCORE was not met!"; exit 1; fi
        working-directory: ${{ matrix.package }}
